version: '3'
services:
  front:
    container_name: app_front_inaturalist
    build:
      context: .
      dockerfile: Dockerfile.front
    image: inaturalist_front/ubuntu:v1f
    networks:
      - frontend
    ports:
      - "8002:82" #  proxy -> front
      - "8001:81" # front = index.html
    volumes:
      - ./bin:/usr/local/scripts
      - ./front:/front
      - ./nginx:/nginx
      - ./static:/static
    # restart: always
    depends_on:
      - web
    tty: true

  web: # uwsgi
    container_name: app_web_inaturalist
    build: 
      context: .
      dockerfile: Dockerfile.back
    image: inaturalist/ubuntu:v1b
    networks:
      - frontend
      - backend
    ports:
      - "0.0.0.0:${WEB_HTTPS_PORT}:443"
      - "0.0.0.0:${WEB_HTTP_DEV_PORT}:8000"
      - "8009:84" #  nginx proxy -> backend
      - "8005:8081" # backend = django
    volumes:
      - ./back:/app
      - ./bin:/usr/local/scripts
      - ./nginx:/nginx
      - ./static:/static
      - ./media:/app_media
    environment:
      FRONT_URL: ${FRONT_URL}
      DRF_RECAPTCHA_SECRET_V3: ${DRF_RECAPTCHA_SECRET_V3}
      INAT_CLIENT_ID: ${INAT_CLIENT_ID}
      INAT_SECRET: ${INAT_SECRET}
      GCP_BQ_CREDS_JSON: ${GCP_BQ_CREDS_JSON} # Bigquery app_creds
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    # restart: always
    depends_on:
      - db
      - redis
    tty: true
  db:
    image: postgres
    container_name: postgres_inaturalist
    networks:
      - backend
    volumes:
      #- ./database:/var/lib/postgresql/data
      - ./bin:/usr/local/scripts
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    # restart: always
    ports:
      - "0.0.0.0:${POSTGRES_PORT}:5432"
    command:
      -c fsync=off
  redis:
    container_name: redis_inaturalist
    image: redis:latest
    # restart: always
    networks:
      - backend
    ports:
      - "6397:6379"
networks:
  frontend:
      driver: bridge
  backend:
      driver: bridge
